# Generated by Django 4.2.7 on 2025-08-17 09:42

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('assignment_id', models.CharField(blank=True, help_text='Auto-generated assignment ID (ASN-YYYY-NNNN)', max_length=20, unique=True)),
                ('assignment_type', models.CharField(choices=[('PERMANENT', 'Permanent Assignment'), ('TEMPORARY', 'Temporary Assignment'), ('MAINTENANCE', 'Maintenance Assignment'), ('PROJECT', 'Project Assignment')], default='PERMANENT', help_text='Type of assignment', max_length=20)),
                ('status', models.CharField(choices=[('ASSIGNED', 'Assigned'), ('RETURNED', 'Returned'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled')], default='ASSIGNED', help_text='Current assignment status', max_length=20)),
                ('assigned_date', models.DateField(default=django.utils.timezone.now, help_text='Date when device was assigned')),
                ('expected_return_date', models.DateField(blank=True, help_text='Expected return date (for temporary assignments)', null=True)),
                ('actual_return_date', models.DateField(blank=True, help_text='Actual date when device was returned', null=True)),
                ('purpose', models.CharField(help_text='Purpose or reason for assignment', max_length=200)),
                ('assignment_notes', models.TextField(blank=True, help_text='Additional notes about this assignment')),
                ('return_notes', models.TextField(blank=True, help_text='Notes when device is returned')),
                ('condition_at_assignment', models.CharField(choices=[('EXCELLENT', 'Excellent'), ('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor')], default='GOOD', help_text='Device condition when assigned', max_length=20)),
                ('condition_at_return', models.CharField(blank=True, choices=[('EXCELLENT', 'Excellent'), ('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor'), ('DAMAGED', 'Damaged')], help_text='Device condition when returned', max_length=20)),
                ('emergency_contact', models.CharField(blank=True, help_text='Emergency contact person', max_length=100)),
                ('emergency_phone', models.CharField(blank=True, help_text='Emergency contact phone number', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this assignment is currently active')),
                ('is_overdue', models.BooleanField(default=False, help_text='Whether this assignment is overdue')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
                'db_table': 'assignments_assignment',
                'ordering': ['-assigned_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentQRCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_code_id', models.UUIDField(default=uuid.uuid4, help_text='Unique QR code identifier', unique=True)),
                ('qr_code', models.ImageField(help_text='Generated QR code image', upload_to='qrcodes/assignments/')),
                ('qr_data', models.TextField(help_text='Data encoded in the QR code')),
                ('size', models.PositiveIntegerField(default=200, help_text='QR code size in pixels')),
                ('format', models.CharField(default='PNG', help_text='Image format', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this QR code is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(help_text='Assignment this QR code represents', on_delete=django.db.models.deletion.CASCADE, related_name='qr_codes', to='assignments.assignment')),
            ],
            options={
                'verbose_name': 'Assignment QR Code',
                'verbose_name_plural': 'Assignment QR Codes',
                'db_table': 'assignments_assignmentqrcode',
                'ordering': ['-created_at'],
            },
        ),
    ]
