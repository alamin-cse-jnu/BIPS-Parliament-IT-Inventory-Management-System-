# Generated by Django 4.2.7 on 2025-01-XX XX:XX
# Migration: Add PRP Integration Fields to CustomUser
# Location: Bangladesh Parliament Secretariat, Dhaka
# Purpose: PIMS-PRP Integration - Add tracking fields for Parliament Resource Portal sync

from django.db import migrations, models


class Migration(migrations.Migration):
    """
    Migration to add PRP (Parliament Resource Portal) integration fields.
    
    This migration safely adds 2 new fields to the CustomUser model:
    - is_prp_managed: Boolean field to track PRP-managed users
    - prp_last_sync: DateTime field to track last sync from PRP API
    
    These fields enable one-way sync from PRP â†’ PIMS while maintaining
    backwards compatibility with existing user data.
    """

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        # Add PRP management tracking field
        migrations.AddField(
            model_name='customuser',
            name='is_prp_managed',
            field=models.BooleanField(
                default=False,
                help_text='Indicates if this user is managed by PRP (Parliament Resource Portal). PRP-managed users have read-only data that syncs from PRP API.'
            ),
        ),
        
        # Add PRP last sync timestamp field
        migrations.AddField(
            model_name='customuser',
            name='prp_last_sync',
            field=models.DateTimeField(
                blank=True,
                help_text='Timestamp of the last successful sync from PRP API. Only applicable for PRP-managed users (is_prp_managed=True).',
                null=True
            ),
        ),
        
        # Add database index for PRP managed users (performance optimization)
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(
                fields=['is_prp_managed'],
                name='users_customuser_is_prp_managed_idx'
            ),
        ),
        
        # Add composite index for PRP users with sync status (query optimization)
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(
                fields=['is_prp_managed', 'prp_last_sync'],
                name='users_customuser_prp_sync_idx'
            ),
        ),
    ]